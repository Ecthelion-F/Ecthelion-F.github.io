<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>C++STL仿函数简单应用</title>
    <link href="/2020/p203318/"/>
    <url>/2020/p203318/</url>
    
    <content type="html"><![CDATA[<p>在写<a href="https://github.com/Ecthelion-F/DS-Algorithm/blob/master/Graph/ShortestPath/Dijkstra_template.cpp" target="_blank" rel="noopener">堆优化的Dijkstra模板</a>的时候用到了 STL 的<code>priority_queue</code>，队列中压入了自定义的结构体，需要重载运算符利用仿函数实现比较，鉴于自己太菜<del>既没有查到也</del>记不住原理，只好暴力记录用法待查。</p><h2 id="重载运算符方法"><a href="#重载运算符方法" class="headerlink" title="重载运算符方法"></a>重载运算符方法</h2><p>这种方法在定义的结构体中重载运算符来实现大/小根堆，缺点似乎是没法混合生成大根堆和小根堆….？</p><pre><code class="lang-c++">//自定义的结构体，以len作为比较关键字struct Node{    int pos;    int len;    bool operator &lt;( const Node &amp;x )const{ //这里是重载的运算符        return x.len &lt; len;//产生小根堆    }};priority_queue&lt;Node&gt; s;</code></pre><h3 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h3><p>一直重载小于号运算符，接收到的参数有根的性质，小根堆就让参数在小侧，大根堆就让参数在大侧</p><h2 id="在sort-函数中应用"><a href="#在sort-函数中应用" class="headerlink" title="在sort()函数中应用"></a>在sort()函数中应用</h2><p>比较通用的办法是实现一个比较函数<code>cmp</code>作为<code>sort()</code>的第三个参数传入</p><pre><code class="lang-c++">bool cmp(Node &amp;a, Node &amp;b){return a.len&gt;b.len}sort(s, s+n, cmp);</code></pre><h3 id="食用方法-1"><a href="#食用方法-1" class="headerlink" title="食用方法"></a>食用方法</h3><ul><li>接收两个参数按顺序排列，降序用大于升序用小于</li><li>另外重载运算符的食用姿势也可以，<del>怎么理解我想不明白决定先老老实实用<code>cmp</code></del></li></ul>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STL</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git将一个项目推送到多个仓库</title>
    <link href="/2020/p175540/"/>
    <url>/2020/p175540/</url>
    
    <content type="html"><![CDATA[<p>在写<a href="https://github.com/Ecthelion-F/ExpReportTemplate" target="_blank" rel="noopener">物理实验报告模板</a>的时候因为我们这边GitHub被墙了，希望能在国内的代码托管平台再保存一份，以后更新也能同时push到两个仓库<del>方便抢救不会用梯子的室友</del>，遂Google，果然前人已经想到了问题准备好了解决方案，只要能够准确的提出问题<em>(:з」∠)</em></p><p><img src="https://s2.ax1x.com/2020/02/02/1Y2Y6O.png" srcset="/img/loading.gif" alt="1Y2Y6O.png"></p><p>现在把个人认为比较方便的解决方案记录如下</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>假设我们已经将项目优雅的放在了github，在本地仓库执行</p><pre><code>git remote -v</code></pre><p>可以看到现有的远程仓库地址</p><pre><code>origin  https://github.com/Ecthelion-F/ExpReportTemplate.git (fetch)origin  https://github.com/Ecthelion-F/ExpReportTemplate.git (push)</code></pre><p>接下来将新平台的地址加入，这里我用的coding</p><pre><code>git remote set-url --add origin https://e.coding.net/asdjklz4/ExpReportTemplate.git</code></pre><p>回车，然后重新<code>push</code>即可，以后<code>push</code>的时候也会同时推到两个平台，非常方便√</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Latex使用label出现引用未定义</title>
    <link href="/2020/p195218/"/>
    <url>/2020/p195218/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在用LaTeX制作物理实验报告模板，需要对图表做交叉引用，使用<code>\label{xx}</code>定义标签再使用<code>\ref{xx}</code>出现了”reference xx on page xxx undefined”的warning，同时生成的PDF文件中引用处仅出现??</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>需要文本使用UTF-8编码才能识别，将文档开始的</p><pre><code class="lang-tex">\documentclass{ctexart}</code></pre><p>改为</p><pre><code class="lang-tex">\documentclass[UTF8]{ctexart}</code></pre><p>重新编译即可</p><h1 id="补充记录"><a href="#补充记录" class="headerlink" title="补充记录"></a>补充记录</h1><ul><li>给表格加<code>\label{}</code>时应注意放在<code>\caption{}</code>的后面，因为latex是靠caption定位的</li></ul>]]></content>
    
    
    <categories>
      
      <category>LaTeX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/p145656/"/>
    <url>/2020/p145656/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="lang-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="lang-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="lang-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="lang-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>